<?php

namespace MuchoMasFacil\InPageEditBundle\Entity;

use Doctrine\ORM\EntityRepository;

use Symfony\Component\DependencyInjection\ContainerAwareInterface;

/**
 * ContentRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ContentRepository extends EntityRepository
{

    private $content_definitions = array();
    
    public function setContentDefinitions($content_definitions)
    {
        $this->content_definitions = $content_definitions;
    }

    public function remove($handler)
    {
        $em = $this->getEntityManager();
        $content = $em->getRepository('MuchoMasFacilInPageEditBundle:Content')->find($handler);
        if ($content) {
            $em->remove($content);
            $em->flush();
        }
    }

    public function removeAndCreate($handler, $content_definition_or_entity_class, $is_collection = null, $max_collection_length = null, $editor_roles = null)
    {
        $this->remove($handler);
        return $this->findOrCreateIfNotExist($handler, $content_definition_or_entity_class, $is_collection, $max_collection_length, $editor_roles);
    }
    
    public function findOrCreateIfNotExist($handler, $content_definition_or_entity_class, $is_collection = null, $max_collection_length = null, $editor_roles = null)
    {
        $em = $this->getEntityManager();

        $content = $em->getRepository('MuchoMasFacilInPageEditBundle:Content')->find($handler);
        
        if (!$content){
            //get params
            $params = $this->content_definitions['default'];
            
            if (isset($this->content_definitions[$content_definition_or_entity_class])) {
                $params_by_content_definition = $this->content_definitions[$content_definition_or_entity_class];
                $params = array_merge($params, $params_by_content_definition);
            }
            else {
                $params['content_entity_class'] = $content_definition_or_entity_class;
            }

            $content_entity_class = $params['content_entity_class'];
            
            if (!class_exists($content_entity_class)) {
                throw new \Exception($content_definition_or_entity_class.' is not a content_definition in your config files neither a valid entity class');        
            }
            
            foreach (compact('is_collection', 'max_collection_length', 'editorRoles') as $key => $val) {
                if ($val) {
                    $params[$key] = $val;
                }
            }

            //create content from params        
            $content = new \MuchoMasFacil\InPageEditBundle\Entity\Content();
            $content->setHandler($handler);
            $content->setContentEntityClass($content_entity_class);
            $content->setEditorRoles($params['editor_roles']);            
            $content->setIsCollection($params['is_collection']);
            $content->setMaxCollectionLength($params['max_collection_length']);

            //create content.content
            $number_of_items_to_lorem_impsum = $params['lorem_ipsum_items_in_collection'];
            if (!$content->getIsCollection())  {
                $number_of_items_to_lorem_impsum = 1;
            }
            $content_content = array();
            for ( $a = 0; $a < $number_of_items_to_lorem_impsum ; $a++ ) {
                $object = new $content_entity_class();
                $object->loremIpsum();
                $content_content[] = $object;
            }
            $content->setContent($content_content);
            //save it
            $em->persist($content);
            $em->flush();

        }//!Content
        return $content;
    }


}

